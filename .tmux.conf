# Compilation from source:
# ./configure CFLAGS="-I$HOME/env/include" LDFLAGS="-L$HOME/env/lib" --prefix=$HOME/env
# make
# make install

#set-option -g default-shell /remote/users2/darmand/env/bin/zsh

# Set the default terminal mode to 256color mode
set -g default-terminal "screen-256color"
#set -g default-terminal "xterm-256color"

setw -g xterm-keys on # for vim
setw -g utf8 on

# Faster command sequences
set -s escape-time 0

# Setting the prefix from C-b to C-a
set -g prefix C-a

# Ensure that we can send Ctrl-A to other apps
bind C-a send-prefix

#unbind -n F20
#set-option -g terminal-overrides "*:kf20=\e[34~"
#set-option -g terminal-overrides "*:kf20=\e[19;2~"

# Switch windows
bind-key -n M-d next-window
bind-key -n M-s previous-window
bind-key -n M-a last-window
bind-key -n M-1 select-window -t :1
bind-key -n M-2 select-window -t :2
bind-key -n M-3 select-window -t :3
bind-key -n M-4 select-window -t :4
bind-key -n M-5 select-window -t :5
bind-key -n M-6 select-window -t :6
bind-key -n M-7 select-window -t :7
bind-key -n M-8 select-window -t :8
bind-key -n M-9 select-window -t :9

#bind-key a last-pane
#bind-key C-a if-shell 'test $(tmux list-panes | wc -l) -gt 1' 'last-pane' 'last-window'


# Move windows
bind -n S-left swap-window -t -1
bind -n S-right swap-window -t +1

# Close window
bind-key q kill-pane

bind-key S command-prompt -p "ssh: " "new-window -n %1 'ssh %1'"

# join/break panes
bind-key j join-pane -s !
bind-key b break-pane

# rebind copy mode keys
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection
#unbind p
#bind p paste-buffer

# move x clipboard into tmux paste buffer
bind p run "tmux set-buffer \"$(xclip -d ncedarmand:0.0 -o -selection clipboard)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
bind y run "tmux show-buffer | xclip -d ncedarmand:0.0 -i -selection clipboard"

# Sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Fix split window border
set-option -g terminal-overrides '*:enacs@:smacs@:rmacs@:acsc@'

# Allow xterm titles in terminal window, terminal scrolling with scrollbar, and setting overrides of C-Up, C-Down, C-Left, C-Right
#set -g terminal-overrides "xterm*:XT:smcup@:rmcup@:kUP5=\eOA:kDN5=\eOB:kLFT5=\eOD:kRIT5=\eOC"

set-window-option -g utf8 on
#set-option -g set-titles on
#set-option -g set-titles-string '#T'
set -g set-titles off
#set -g set-titles-string "#(tmux ls | awk -F: '{print $1}' | xargs | sed 's/\ / | /g')"
set-window-option -g automatic-rename on

set-option -g history-limit 50000


# Free the original Ctrl-b prefix keybinding
unbind C-b

#setting the delay between prefix and command
set -sg escape-time 1


# Set the base index for windows to 1 instead of 0
set -g base-index 1

# Set the base index for panes to 1 instead of 0
# Not supported..
setw -g pane-base-index 1

# Reload the file with Prefix r
bind r source-file ~/.tmux.conf \; display "Reloaded!"

# splitting panes
bind v split-window -h
bind h split-window -v

# Quick pane selection
bind -r C-h select-window -t :-
bind -r C-l select-window -t :+

# Pane resizing
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

## Pane zoom in/out
#unbind +
#bind + new-window -d -n tmux-zoom \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom
##bind + new-window -d -n tmux-zoom 'clear && echo TMUX ZOOM && read' \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom
#unbind -
#bind - last-window \; swap-pane -s tmux-zoom.0 \; kill-window -t tmux-zoom

unbind x
bind x run ". ~/.tmux/zoom"

# mouse support
setw -g mode-mouse on
set -g mouse-select-pane on
# Not supported..
set -g mouse-resize-pane on
set -g mouse-select-window on

# enable activity alerts
setw -g monitor-activity on
set -g visual-activity on

# set colors for the active window
setw -g window-status-current-fg yellow
setw -g window-status-current-bg green
setw -g window-status-current-attr bright
set -g window-status-activity-attr bold

set  -g status-utf8 on
set  -g status-keys vi
set  -g status-interval 5
set  -g status-attr bright
set  -g status-fg colour255
set  -g status-bg colour240
set  -g status-right-length 50
#set  -g status-left '#[fg=green,nobold][#[fg=yellow]#S#[fg=green]]#[default]'
set  -g status-justify centre
set  -g status-right '#[fg=white,nobold]#(uptime | cut -d "," -f 3-)'
setw -g window-status-current-format '#[fg=black,bg=colour226,nobold] #I-[#W] #[default]'
#setw -g window-status-last-format '#[fg=black,bg=colour186,nobold] #I-[#W] #[default]'
setw -g window-status-format '#[fg=black,bg=colour247,nobold] #I-[#W] #[default]'
set -g window-status-last-bg colour160

## Center the window list
set -g status-justify left

# enable vi keys.
setw -g mode-keys vi

# Log output to a text file on demand
bind P pipe-pane -o "cat >>~/#W.log" \; display "Toggled logging to ~/#W.log"

